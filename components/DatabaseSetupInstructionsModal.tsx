import React, { useState } from 'react';

interface DatabaseSetupInstructionsModalProps {
  onRetry: () => void;
}

const DatabaseIcon: React.FC<{className?: string}> = ({className}) => (
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className={className}>
        <ellipse cx="12" cy="5" rx="9" ry="3"></ellipse>
        <path d="M21 12c0 1.66-4 3-9 3s-9-1.34-9-3"></path>
        <path d="M3 5v14c0 1.66 4 3 9 3s9-1.34 9-3V5"></path>
    </svg>
);

const CheckIcon: React.FC<{className?: string}> = ({className}) => (
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className={className}>
      <polyline points="20 6 9 17 4 12" />
    </svg>
);

const ClipboardIcon: React.FC<{className?: string}> = ({className}) => (
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className={className}>
      <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
      <rect x="8" y="2" width="8" height="4" rx="1" ry="1" />
    </svg>
);

const RefreshCw: React.FC<{className?: string}> = ({className}) => (
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className={className}>
        <path d="M3 2v6h6"/><path d="M21 12A9 9 0 0 0 6 5.3L3 8"/><path d="M21 22v-6h-6"/><path d="M3 12a9 9 0 0 0 15 6.7l3-2.7"/>
    </svg>
);


const DatabaseSetupInstructionsModal: React.FC<DatabaseSetupInstructionsModalProps> = ({ onRetry }) => {
  const sqlScript = `
-- 冪等性（何度実行しても安全）を確保したデータベースセットアップスクリプト

-- RLS (Row Level Security) を有効化（推奨）
ALTER TABLE public.users ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.customers ENABLE ROW LEVEL SECURITY;
-- ... 他のテーブルにも必要に応じてRLSを有効化 ...

-- ユーザーは自身の情報のみ閲覧・編集可能
CREATE POLICY "Users can view and update their own data."
ON public.users FOR ALL
USING (auth.uid() = id)
WITH CHECK (auth.uid() = id);

-- ログインしているユーザーは全顧客情報を閲覧可能（サンプルポリシー）
CREATE POLICY "Authenticated users can view all customers."
ON public.customers FOR SELECT
USING (auth.role() = 'authenticated');

-- setup_database関数の作成
CREATE OR REPLACE FUNCTION setup_database()
RETURNS void AS $$
BEGIN

  -- 1. テーブル作成 (IF NOT EXISTS を使用)
  CREATE TABLE IF NOT EXISTS public.users ( id UUID PRIMARY KEY, name TEXT NOT NULL, created_at TIMESTAMPTZ DEFAULT NOW() NOT NULL, role TEXT NOT NULL DEFAULT 'user' );
  CREATE TABLE IF NOT EXISTS public.application_codes ( id UUID PRIMARY KEY DEFAULT gen_random_uuid(), code VARCHAR(10) UNIQUE NOT NULL, name TEXT NOT NULL, description TEXT, created_at TIMESTAMPTZ DEFAULT NOW() NOT NULL );
  CREATE TABLE IF NOT EXISTS public.approval_routes ( id UUID PRIMARY KEY DEFAULT gen_random_uuid(), name TEXT NOT NULL UNIQUE, route_data JSONB NOT NULL, created_at TIMESTAMPTZ DEFAULT NOW() NOT NULL );
  CREATE TABLE IF NOT EXISTS public.customers ( id UUID PRIMARY KEY DEFAULT gen_random_uuid(), customer_name VARCHAR NOT NULL, created_at TIMESTAMPTZ DEFAULT NOW() NOT NULL );
  CREATE TABLE IF NOT EXISTS public.invoices ( id UUID PRIMARY KEY DEFAULT gen_random_uuid(), invoice_no TEXT UNIQUE NOT NULL, invoice_date DATE NOT NULL DEFAULT CURRENT_DATE, customer_name TEXT NOT NULL, subtotal_amount NUMERIC NOT NULL, tax_amount NUMERIC NOT NULL, total_amount NUMERIC NOT NULL, status TEXT NOT NULL DEFAULT 'issued', created_at TIMESTAMPTZ NOT NULL DEFAULT NOW() );
  CREATE TABLE IF NOT EXISTS public.jobs ( id TEXT PRIMARY KEY, client_name TEXT NOT NULL, title TEXT NOT NULL, status TEXT NOT NULL, due_date DATE NOT NULL, quantity INTEGER NOT NULL, paper_type TEXT NOT NULL, finishing TEXT NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(), price INTEGER NOT NULL, variable_cost INTEGER NOT NULL, invoice_status TEXT NOT NULL );
  CREATE TABLE IF NOT EXISTS public.invoice_items ( id UUID PRIMARY KEY DEFAULT gen_random_uuid(), invoice_id UUID NOT NULL REFERENCES public.invoices(id) ON DELETE CASCADE, description TEXT NOT NULL, quantity NUMERIC NOT NULL, unit_price NUMERIC NOT NULL, line_total NUMERIC NOT NULL );
  CREATE TABLE IF NOT EXISTS public.journal_entries ( id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, date TIMESTAMPTZ NOT NULL DEFAULT NOW(), account TEXT NOT NULL, debit NUMERIC NOT NULL DEFAULT 0, credit NUMERIC NOT NULL DEFAULT 0, description TEXT, status TEXT NOT NULL DEFAULT 'posted' );
  CREATE TABLE IF NOT EXISTS public.account_items ( id UUID PRIMARY KEY DEFAULT gen_random_uuid(), code TEXT NOT NULL UNIQUE, name TEXT NOT NULL, is_active BOOLEAN NOT NULL DEFAULT true, created_at TIMESTAMPTZ NOT NULL DEFAULT NOW() );
  CREATE TABLE IF NOT EXISTS public.leads ( id UUID PRIMARY KEY DEFAULT gen_random_uuid(), name TEXT NOT NULL, company TEXT NOT NULL, status TEXT NOT NULL, created_at TIMESTAMPTZ DEFAULT NOW() NOT NULL );
  CREATE TABLE IF NOT EXISTS public.inbox_items ( id UUID PRIMARY KEY DEFAULT gen_random_uuid(), file_name TEXT NOT NULL, file_path TEXT NOT NULL, mime_type TEXT NOT NULL, status TEXT NOT NULL, created_at TIMESTAMPTZ DEFAULT NOW() NOT NULL );
  CREATE TABLE IF NOT EXISTS public.applications ( id UUID PRIMARY KEY DEFAULT gen_random_uuid(), status TEXT NOT NULL DEFAULT 'draft', created_at TIMESTAMPTZ DEFAULT NOW() NOT NULL );
  CREATE TABLE IF NOT EXISTS public.purchase_orders ( id UUID PRIMARY KEY DEFAULT gen_random_uuid(), supplier_name TEXT NOT NULL, item_name TEXT NOT NULL, order_date DATE NOT NULL DEFAULT NOW(), quantity NUMERIC NOT NULL, status TEXT NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT NOW() );
  CREATE TABLE IF NOT EXISTS public.inventory_items ( id UUID PRIMARY KEY DEFAULT gen_random_uuid(), name TEXT NOT NULL UNIQUE, category TEXT NOT NULL, quantity NUMERIC NOT NULL, unit TEXT NOT NULL, unit_price NUMERIC NOT NULL, created_at TIMESTAMPTZ NOT NULL DEFAULT NOW() );
  
  -- 2. カラム追加 (ADD COLUMN IF NOT EXISTS を使用)
  ALTER TABLE public.customers ADD COLUMN IF NOT EXISTS customer_code_alt VARCHAR, ADD COLUMN IF NOT EXISTS customer_name_kana VARCHAR, ADD COLUMN IF NOT EXISTS name2 VARCHAR, ADD COLUMN IF NOT EXISTS customer_rank VARCHAR, ADD COLUMN IF NOT EXISTS customer_division VARCHAR, ADD COLUMN IF NOT EXISTS sales_type VARCHAR, ADD COLUMN IF NOT EXISTS support_company_flag TEXT, ADD COLUMN IF NOT EXISTS zip_code VARCHAR, ADD COLUMN IF NOT EXISTS address_1 VARCHAR, ADD COLUMN IF NOT EXISTS address_2 VARCHAR, ADD COLUMN IF NOT EXISTS address_3 VARCHAR, ADD COLUMN IF NOT EXISTS nearest_station VARCHAR, ADD COLUMN IF NOT EXISTS phone_number VARCHAR, ADD COLUMN IF NOT EXISTS fax VARCHAR, ADD COLUMN IF NOT EXISTS representative VARCHAR, ADD COLUMN IF NOT EXISTS foundation_date DATE, ADD COLUMN IF NOT EXISTS capital VARCHAR, ADD COLUMN IF NOT EXISTS annual_sales VARCHAR, ADD COLUMN IF NOT EXISTS employees_count VARCHAR, ADD COLUMN IF NOT EXISTS credit_limit VARCHAR, ADD COLUMN IF NOT EXISTS closing_day TEXT, ADD COLUMN IF NOT EXISTS pay_day TEXT, ADD COLUMN IF NOT EXISTS recovery_method TEXT, ADD COLUMN IF NOT EXISTS pay_money TEXT, ADD COLUMN IF NOT EXISTS trade_terms TEXT, ADD COLUMN IF NOT EXISTS bank_name VARCHAR, ADD COLUMN IF NOT EXISTS branch_name VARCHAR, ADD COLUMN IF NOT EXISTS branch_code VARCHAR, ADD COLUMN IF NOT EXISTS account_no VARCHAR, ADD COLUMN IF NOT EXISTS account_name_kana VARCHAR, ADD COLUMN IF NOT EXISTS sales_user_code TEXT, ADD COLUMN IF NOT EXISTS note TEXT, ADD COLUMN IF NOT EXISTS info_history TEXT, ADD COLUMN IF NOT EXISTS info_sales_activity TEXT, ADD COLUMN IF NOT EXISTS info_order_flow TEXT, ADD COLUMN IF NOT EXISTS info_transaction_progress TEXT, ADD COLUMN IF NOT EXISTS info_current_orders TEXT, ADD COLUMN IF NOT EXISTS info_future_proposals TEXT, ADD COLUMN IF NOT EXISTS info_competitors TEXT, ADD COLUMN IF NOT EXISTS info_requirements TEXT, ADD COLUMN IF NOT EXISTS info_sales_ideas TEXT, ADD COLUMN IF NOT EXISTS info_management_notes TEXT, ADD COLUMN IF NOT EXISTS info_other TEXT, ADD COLUMN IF NOT EXISTS create_user_id UUID, ADD COLUMN IF NOT EXISTS create_date TIMESTAMPTZ, ADD COLUMN IF NOT EXISTS update_user_id UUID, ADD COLUMN IF NOT EXISTS update_date TIMESTAMPTZ, ADD COLUMN IF NOT EXISTS drawing_memo TEXT, ADD COLUMN IF NOT EXISTS drawing_date TEXT, ADD COLUMN IF NOT EXISTS bill_payment_day TEXT, ADD COLUMN IF NOT EXISTS bill_pay NUMERIC, ADD COLUMN IF NOT EXISTS credit_sales_pay NUMERIC, ADD COLUMN IF NOT EXISTS tax_fraction INTEGER, ADD COLUMN IF NOT EXISTS tax_in_flag TEXT, ADD COLUMN IF NOT EXISTS budget_flag TEXT, ADD COLUMN IF NOT EXISTS start_date DATE, ADD COLUMN IF NOT EXISTS end_date DATE, ADD COLUMN IF NOT EXISTS introducer TEXT, ADD COLUMN IF NOT EXISTS keii TEXT, ADD COLUMN IF NOT EXISTS previous_person TEXT, ADD COLUMN IF NOT EXISTS sales_trends TEXT, ADD COLUMN IF NOT EXISTS gross_profit TEXT, ADD COLUMN IF NOT EXISTS gross_profit_by_product TEXT, ADD COLUMN IF NOT EXISTS company_content TEXT, ADD COLUMN IF NOT EXISTS key_person TEXT, ADD COLUMN IF NOT EXISTS order_rate TEXT, ADD COLUMN IF NOT EXISTS ippan_pub TEXT, ADD COLUMN IF NOT EXISTS text_pub TEXT, ADD COLUMN IF NOT EXISTS gyokai_pub TEXT, ADD COLUMN IF NOT EXISTS shoin_pub TEXT, ADD COLUMN IF NOT EXISTS tsushin_edu TEXT, ADD COLUMN IF NOT EXISTS other_pub TEXT, ADD COLUMN IF NOT EXISTS business_result TEXT, ADD COLUMN IF NOT EXISTS company_features TEXT, ADD COLUMN IF NOT EXISTS customer_trend TEXT, ADD COLUMN IF NOT EXISTS what_happened TEXT, ADD COLUMN IF NOT EXISTS response_to_competitors TEXT, ADD COLUMN IF NOT EXISTS sales_goal TEXT, ADD COLUMN IF NOT EXISTS external_items TEXT, ADD COLUMN IF NOT EXISTS internal_items TEXT, ADD COLUMN IF NOT EXISTS quotation_point TEXT, ADD COLUMN IF NOT EXISTS main_products TEXT, ADD COLUMN IF NOT EXISTS total_order_amount TEXT, ADD COLUMN IF NOT EXISTS rival_info TEXT, ADD COLUMN IF NOT EXISTS customer_contact_info TEXT, ADD COLUMN IF NOT EXISTS org_chart TEXT, ADD COLUMN IF NOT EXISTS pq TEXT, ADD COLUMN IF NOT EXISTS vq TEXT, ADD COLUMN IF NOT EXISTS mq TEXT, ADD COLUMN IF NOT EXISTS m_rate TEXT, ADD COLUMN IF NOT EXISTS accident_history TEXT, ADD COLUMN IF NOT EXISTS customer_voice TEXT, ADD COLUMN IF NOT EXISTS annual_action_plan TEXT, ADD COLUMN IF NOT EXISTS lost_orders TEXT, ADD COLUMN IF NOT EXISTS growth_potential TEXT, ADD COLUMN IF NOT EXISTS monthly_plan TEXT;
  ALTER TABLE public.jobs ADD COLUMN IF NOT EXISTS customer_id UUID REFERENCES public.customers(id), ADD COLUMN IF NOT EXISTS details TEXT, ADD COLUMN IF NOT EXISTS invoiced_at TIMESTAMPTZ, ADD COLUMN IF NOT EXISTS paid_at TIMESTAMPTZ, ADD COLUMN IF NOT EXISTS ready_to_invoice BOOLEAN DEFAULT false, ADD COLUMN IF NOT EXISTS invoice_id UUID REFERENCES public.invoices(id) ON DELETE SET NULL;
  ALTER TABLE public.invoices ADD COLUMN IF NOT EXISTS due_date DATE, ADD COLUMN IF NOT EXISTS paid_at TIMESTAMPTZ;
  ALTER TABLE public.invoice_items ADD COLUMN IF NOT EXISTS job_id TEXT REFERENCES public.jobs(id), ADD COLUMN IF NOT EXISTS unit TEXT, ADD COLUMN IF NOT EXISTS sort_index INTEGER DEFAULT 0;
  ALTER TABLE public.account_items ADD COLUMN IF NOT EXISTS category_code TEXT, ADD COLUMN IF NOT EXISTS sort_order INTEGER NOT NULL DEFAULT 0;
  ALTER TABLE public.leads ADD COLUMN IF NOT EXISTS email TEXT, ADD COLUMN IF NOT EXISTS phone TEXT, ADD COLUMN IF NOT EXISTS source TEXT, ADD COLUMN IF NOT EXISTS tags TEXT[], ADD COLUMN IF NOT EXISTS message TEXT, ADD COLUMN IF NOT EXISTS updated_at TIMESTAMPTZ, ADD COLUMN IF NOT EXISTS referrer TEXT, ADD COLUMN IF NOT EXISTS referrer_url TEXT, ADD COLUMN IF NOT EXISTS landing_page_url TEXT, ADD COLUMN IF NOT EXISTS search_keywords TEXT, ADD COLUMN IF NOT EXISTS utm_source TEXT, ADD COLUMN IF NOT EXISTS utm_medium TEXT, ADD COLUMN IF NOT EXISTS utm_campaign TEXT, ADD COLUMN IF NOT EXISTS utm_term TEXT, ADD COLUMN IF NOT EXISTS utm_content TEXT, ADD COLUMN IF NOT EXISTS user_agent TEXT, ADD COLUMN IF NOT EXISTS ip_address TEXT, ADD COLUMN IF NOT EXISTS device_type TEXT, ADD COLUMN IF NOT EXISTS browser_name TEXT, ADD COLUMN IF NOT EXISTS os_name TEXT, ADD COLUMN IF NOT EXISTS country TEXT, ADD COLUMN IF NOT EXISTS city TEXT, ADD COLUMN IF NOT EXISTS region TEXT, ADD COLUMN IF NOT EXISTS employees TEXT, ADD COLUMN IF NOT EXISTS budget TEXT, ADD COLUMN IF NOT EXISTS timeline TEXT, ADD COLUMN IF NOT EXISTS inquiry_type TEXT, ADD COLUMN IF NOT EXISTS inquiry_types TEXT[], ADD COLUMN IF NOT EXISTS info_sales_activity TEXT, ADD COLUMN IF NOT EXISTS assignee_id UUID;
  ALTER TABLE public.inbox_items ADD COLUMN IF NOT EXISTS doc_type TEXT NOT NULL DEFAULT 'unknown', ADD COLUMN IF NOT EXISTS extracted_data JSONB, ADD COLUMN IF NOT EXISTS error_message TEXT;
  ALTER TABLE public.applications ADD COLUMN IF NOT EXISTS applicant_id UUID REFERENCES public.users(id), ADD COLUMN IF NOT EXISTS application_code_id UUID REFERENCES public.application_codes(id), ADD COLUMN IF NOT EXISTS form_data JSONB, ADD COLUMN IF NOT EXISTS submitted_at TIMESTAMPTZ, ADD COLUMN IF NOT EXISTS approved_at TIMESTAMPTZ, ADD COLUMN IF NOT EXISTS rejected_at TIMESTAMPTZ, ADD COLUMN IF NOT EXISTS rejection_reason TEXT, ADD COLUMN IF NOT EXISTS current_level INTEGER, ADD COLUMN IF NOT EXISTS approver_id UUID REFERENCES public.users(id), ADD COLUMN IF NOT EXISTS approval_route_id UUID REFERENCES public.approval_routes(id);
  ALTER TABLE public.purchase_orders ADD COLUMN IF NOT EXISTS unit_price NUMERIC NOT NULL DEFAULT 0;

  -- 3. 関数とシーケンスを再作成 (IF NOT EXISTS を使用)
  CREATE SEQUENCE IF NOT EXISTS public.invoice_no_seq START 1001;
  
  -- 4. 初期データ登録 (ON CONFLICT DO NOTHING を使用)
  INSERT INTO public.account_items (code, name, category_code, sort_order, is_active) VALUES ('1111', '現金', 'NOC', 0, true), ('1114', '普通預金', 'NOC', 0, true), ('1121', '売掛金', 'NOC', 0, true), ('2111', '買掛金', 'NOC', 0, true), ('2112', '未払金', 'NOC', 0, true), ('4111', '売上', 'NOC', 4, true), ('5111', '仕入', 'NOC', 5, true), ('5121', '会議費', 'TRP', 5, true), ('5122', '旅費交通費', 'TRP', 5, true), ('5123', '消耗品費', 'NOC', 5, true) ON CONFLICT (code) DO NOTHING;
  INSERT INTO public.application_codes (code, name, description) VALUES ('EXP', '経費精算', '日常的な経費の精算'), ('TRP', '交通費申請', '業務上の移動に伴う交通費の申請'), ('LEV', '休暇申請', '年次有給休暇やその他の休暇の申請'), ('APL', '稟議', '金額の発生しない決裁'), ('DLY', '日報', '日々の業務報告'), ('WKR', '週報', '週次の業務報告') ON CONFLICT (code) DO NOTHING;
  
END;
$$ LANGUAGE plpgsql;
`;
  const [copied, setCopied] = useState(false);

  const handleCopy = () => {
    navigator.clipboard.writeText(sqlScript).then(() => {
      setCopied(true);
      setTimeout(() => setCopied(false), 2000);
    });
  };

  return (
    <div className="fixed inset-0 bg-slate-900 bg-opacity-80 flex justify-center items-center z-50 p-4">
        <div className="bg-white dark:bg-slate-800 rounded-2xl shadow-2xl w-full max-w-4xl max-h-[90vh] flex flex-col">
            <header className="p-6 border-b border-slate-200 dark:border-slate-700">
                <h2 className="text-2xl font-bold text-slate-800 dark:text-white flex items-center gap-3">
                    <DatabaseIcon className="w-8 h-8 text-blue-500" />
                    データベースのセットアップ
                </h2>
                <p className="mt-2 text-slate-500 dark:text-slate-400">
                    アプリケーションの初回起動時、またはデータベーススキーマの更新が必要です。以下のスクリプトを一度だけ実行してください。
                </p>
            </header>
            <main className="p-6 overflow-y-auto">
                <p className="mb-4">
                    Supabaseプロジェクトの <strong>SQL Editor</strong> で以下のスクリプトをコピー＆ペーストして実行してください。
                </p>
                <ol className="list-decimal list-inside space-y-4">
                    <li>
                        Supabaseダッシュボードの <strong>SQL Editor</strong> を開きます。
                    </li>
                    <li>
                        下のボックス内のSQLスクリプト全体をコピーし、エディタに貼り付けます。
                        <div className="relative mt-2">
                            <textarea
                                readOnly
                                value={sqlScript}
                                className="w-full h-48 p-3 font-mono text-sm bg-slate-100 dark:bg-slate-900 rounded-md border border-slate-300 dark:border-slate-700 focus:outline-none"
                            />
                            <button 
                                onClick={handleCopy}
                                className="absolute top-2 right-2 bg-slate-200 dark:bg-slate-700 hover:bg-slate-300 dark:hover:bg-slate-600 text-slate-600 dark:text-slate-200 font-semibold text-sm py-1 px-2 rounded-md flex items-center gap-1.5 transition-colors"
                            >
                                {copied ? <CheckIcon className="w-4 h-4 text-green-500"/> : <ClipboardIcon className="w-4 h-4"/>}
                                {copied ? 'コピーしました' : 'コピー'}
                            </button>
                        </div>
                    </li>
                    <li>
                        <strong>RUN</strong> ボタンをクリックしてスクリプトを実行します。
                    </li>
                    <li>
                        完了したら、下の「再試行」ボタンをクリックしてください。
                    </li>
                </ol>
            </main>
            <footer className="p-6 border-t border-slate-200 dark:border-slate-700 bg-slate-50 dark:bg-slate-800/50 flex justify-end">
                <button 
                    onClick={onRetry}
                    className="flex items-center justify-center gap-2 bg-blue-600 text-white font-semibold py-2.5 px-5 rounded-lg shadow-md hover:bg-blue-700 transition-colors"
                >
                    <RefreshCw className="w-5 h-5" />
                    再試行
                </button>
            </footer>
        </div>
    </div>
  );
};

export default DatabaseSetupInstructionsModal;